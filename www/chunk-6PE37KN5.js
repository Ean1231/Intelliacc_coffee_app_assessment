import{a as $}from"./chunk-KK43OECP.js";import{b as A,d as L,e as I,i as R,k as O,l as v,n as N,p as d,q as E,qa as x,ta as w}from"./chunk-YY4OCJP3.js";import{b as T,e as C}from"./chunk-RO7BUCPQ.js";import{a as u,b as m}from"./chunk-JHI3MBHO.js";var h=class{static createLoginError(n,f,e){return{type:n,message:f,details:e,timestamp:new Date}}static createApiError(n,f,e,t){return{type:n,message:f,statusCode:e,details:t,timestamp:new Date}}};var i={production:!0,soapEndpoint:"https://skynot.intelliacc.com/ws_IntelliCoffee/Service.asmx",soap:{timeout:15e3,retryAttempts:2,retryDelay:2e3,namespace:"http://tempuri.org/",headers:{"Content-Type":"text/xml; charset=utf-8",SOAPAction:"http://tempuri.org/Login"}},logging:{enableConsoleLogging:!1,logLevel:"error"}};var l={NAMESPACE:i.soap.namespace,TEMPLATES:{LOGIN:`<?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xmlns:xsd="http://www.w3.org/2001/XMLSchema"
               xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <soap:Body>
    <Login xmlns="${i.soap.namespace}">
      <username>{{USERNAME}}</username>
      <password>{{PASSWORD}}</password>
    </Login>
  </soap:Body>
</soap:Envelope>`},HEADERS:i.soap.headers,STORAGE:{LOGIN_KEY:"coffee_isLoggedIn"},PLACEHOLDERS:{USERNAME:"{{USERNAME}}",PASSWORD:"{{PASSWORD}}"},NETWORK:{TIMEOUT:i.soap.timeout,RETRY_ATTEMPTS:i.soap.retryAttempts,RETRY_DELAY:i.soap.retryDelay}};var r=(function(s){return s[s.DEBUG=0]="DEBUG",s[s.INFO=1]="INFO",s[s.WARN=2]="WARN",s[s.ERROR=3]="ERROR",s[s.CRITICAL=4]="CRITICAL",s})(r||{}),D=(()=>{let n=class n{constructor(){this.sessionId=this.generateSessionId(),this.currentLogLevel=this.getEnvironmentLogLevel()}setContext(e){this.currentContext=e}clearContext(){this.currentContext=void 0}debug(e,t,o){this.log(r.DEBUG,e,t,o)}info(e,t,o){this.log(r.INFO,e,t,o)}warn(e,t,o){this.log(r.WARN,e,t,o)}error(e,t,o){this.log(r.ERROR,e,t,o)}critical(e,t,o){this.log(r.CRITICAL,e,t,o)}logHttpRequest(e,t,o,a){this.log(r.DEBUG,`\u{1F310} HTTP ${e} ${t}`,{method:e,url:t,requestData:a,type:"http_request"},o)}logHttpResponse(e,t,o,a,p,c){let g=o>=400?r.ERROR:r.DEBUG,S=o>=400?"\u274C":"\u2705";this.log(g,`${S} HTTP ${e} ${t} - ${o} (${a}ms)`,{method:e,url:t,status:o,duration:a,responseData:c,type:"http_response"},p)}logAuthEvent(e,t,o){this.log(r.INFO,`Auth: ${e}`,m(u({},t),{type:"auth_event"}),o)}logUserAction(e,t,o){this.log(r.INFO,`\u{1F464} User: ${e}`,m(u({},t),{userId:o,type:"user_action"}))}logPerformance(e,t,o){let a=t>5e3?r.WARN:r.DEBUG;this.log(a,`\u23F1\uFE0F Performance: ${e} took ${t}ms`,m(u({operation:e,duration:t},o),{type:"performance"}))}log(e,t,o,a){if(e<this.currentLogLevel)return;let p={level:e,message:t,timestamp:new Date,context:this.currentContext,data:o,requestId:a,sessionId:this.sessionId};this.outputLog(p),i.production&&e>=r.ERROR&&this.sendToRemoteLogger(p)}outputLog(e){let t=e.timestamp.toISOString(),o=r[e.level],a=e.context?`[${e.context}]`:"",p=e.requestId?`[${e.requestId}]`:"",c=`${t} ${o} ${a}${p}`.trim();switch(e.level){case r.DEBUG:i.logging?.enableConsoleLogging&&i.logging?.logLevel==="debug"&&console.debug(`\u{1F50D} ${c}`,e.message,e.data||"");break;case r.INFO:i.logging?.enableConsoleLogging&&console.info(`\u2139\uFE0F ${c}`,e.message,e.data||"");break;case r.WARN:console.warn(`\u26A0\uFE0F ${c}`,e.message,e.data||"");break;case r.ERROR:console.error(`\u{1F6A8} ${c}`,e.message,e.data||"");break;case r.CRITICAL:console.error(`\u{1F4A5} ${c}`,e.message,e.data||"");break}}getEnvironmentLogLevel(){if(!i.logging?.enableConsoleLogging)return r.ERROR;switch(i.logging?.logLevel){case"debug":return r.DEBUG;case"info":return r.INFO;case"warn":return r.WARN;case"error":return r.ERROR;default:return i.production?r.WARN:r.DEBUG}}generateSessionId(){return`session-${Date.now()}-${Math.random().toString(36).substr(2,9)}`}sendToRemoteLogger(e){try{let t=JSON.parse(localStorage.getItem("coffee_app_logs")||"[]");t.push(e),t.length>100&&t.splice(0,t.length-100),localStorage.setItem("coffee_app_logs",JSON.stringify(t))}catch(t){console.error("Failed to store log entry:",t)}}getStoredLogs(){try{return JSON.parse(localStorage.getItem("coffee_app_logs")||"[]")}catch(e){return console.error("Failed to retrieve stored logs:",e),[]}}clearStoredLogs(){localStorage.removeItem("coffee_app_logs")}};n.\u0275fac=function(t){return new(t||n)},n.\u0275prov=d({token:n,factory:n.\u0275fac,providedIn:"root"});let s=n;return s})();var X=(()=>{let n=class n{constructor(e,t,o){this.http=e,this.uiState=t,this.logger=o,this.endpoint=i.soapEndpoint,this.loggedIn$=new A(this.getFromStorage()),this.logger.setContext("AuthService")}get isLoggedInSync(){return this.loggedIn$.value}get isLoggedIn$(){return this.loggedIn$.asObservable()}login(e,t){this.logger.logAuthEvent("Login attempt started",{username:e}),this.uiState.clearErrors(),this.uiState.startLoading("Authenticating...");let o=l.TEMPLATES.LOGIN.replace(l.PLACEHOLDERS.USERNAME,e).replace(l.PLACEHOLDERS.PASSWORD,t),a=new x(m(u({},l.HEADERS),{"X-Handle-Own-Errors":"true"}));return(T.isNativePlatform()?L(C.post({url:this.endpoint,headers:l.HEADERS,data:o,responseType:"text"})).pipe(R(g=>String(g.data))):this.http.post(this.endpoint,o,{headers:a,responseType:"text"})).pipe(R(g=>this.parseLoginResponse(g)),N(g=>{if(this.updateAuthState(g),g)this.logger.logAuthEvent("Login successful",{username:e});else{this.logger.logAuthEvent("Login failed - invalid credentials",{username:e});let S=h.createLoginError("authentication","Invalid username or password. Please try again.","Authentication failed");this.uiState.addError(S)}}),O(g=>this.handleLoginError(g,e)),v(()=>this.uiState.stopLoading()))}logout(){this.logger.logAuthEvent("Logout initiated"),this.updateAuthState(!1),this.logger.logAuthEvent("Logout completed")}parseLoginResponse(e){try{let t=new DOMParser().parseFromString(e,"text/xml"),o=t.getElementsByTagNameNS(l.NAMESPACE,"LoginResult")[0]||t.getElementsByTagName("LoginResult")[0],a=(o?.textContent||"").trim().toLowerCase()==="true";return this.logger.debug("SOAP response parsed",{hasNode:!!o,nodeContent:o?.textContent,result:a}),a}catch(t){return this.logger.error("Error parsing login response",t),!1}}handleLoginError(e,t){this.logger.error("Login error occurred",{error:e,username:t,status:e.status,statusText:e.statusText}),this.updateAuthState(!1);let o;return e.status===0?(this.logger.logAuthEvent("Login failed - network error",{username:t,errorType:"network"}),o=h.createLoginError("network","Unable to connect to the server. Please check your connection.","Network error")):e.status>=500?(this.logger.logAuthEvent("Login failed - server error",{username:t,errorType:"server",status:e.status}),o=h.createLoginError("server","Server error occurred. Please try again later.",`Server returned ${e.status}`)):(this.logger.logAuthEvent("Login failed - unknown error",{username:t,errorType:"unknown",error:e.message}),o=h.createLoginError("network","Login failed due to a connection error. Please try again.",e.message||"Unknown error")),this.uiState.addError(o),I(!1)}updateAuthState(e){this.setStorage(e),this.loggedIn$.next(e)}setStorage(e){localStorage.setItem(l.STORAGE.LOGIN_KEY,e?"1":"0")}getFromStorage(){return localStorage.getItem(l.STORAGE.LOGIN_KEY)==="1"}};n.\u0275fac=function(t){return new(t||n)(E(w),E($),E(D))},n.\u0275prov=d({token:n,factory:n.\u0275fac,providedIn:"root"});let s=n;return s})();export{h as a,i as b,D as c,X as d};
