import{a as s,b as N,c as x}from"./chunk-GBVQOZWS.js";import{b as d,d as m,e as S,i as h,k as L,l as A,n as f,p as v,q as l,qa as w,ta as R}from"./chunk-YY4OCJP3.js";import{b as O,e as T}from"./chunk-RO7BUCPQ.js";import{a as E,b as u}from"./chunk-JHI3MBHO.js";var a=class{static createLoginError(o,c,t){return{type:o,message:c,details:t,timestamp:new Date}}static createApiError(o,c,t,e){return{type:o,message:c,statusCode:t,details:e,timestamp:new Date}}};var i={NAMESPACE:s.soap.namespace,TEMPLATES:{LOGIN:`<?xml version="1.0" encoding="utf-8"?>
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xmlns:xsd="http://www.w3.org/2001/XMLSchema"
               xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <soap:Body>
    <Login xmlns="${s.soap.namespace}">
      <username>{{USERNAME}}</username>
      <password>{{PASSWORD}}</password>
    </Login>
  </soap:Body>
</soap:Envelope>`},HEADERS:s.soap.headers,STORAGE:{LOGIN_KEY:"coffee_isLoggedIn"},PLACEHOLDERS:{USERNAME:"{{USERNAME}}",PASSWORD:"{{PASSWORD}}"},NETWORK:{TIMEOUT:s.soap.timeout,RETRY_ATTEMPTS:s.soap.retryAttempts,RETRY_DELAY:s.soap.retryDelay}};var K=(()=>{let o=class o{constructor(t,e,r){this.http=t,this.uiState=e,this.logger=r,this.endpoint=s.soapEndpoint,this.loggedIn$=new d(this.getFromStorage()),this.logger.setContext("AuthService")}get isLoggedInSync(){return this.loggedIn$.value}get isLoggedIn$(){return this.loggedIn$.asObservable()}login(t,e){this.logger.logAuthEvent("Login attempt started",{username:t}),this.uiState.clearErrors(),this.uiState.startLoading("Authenticating...");let r=i.TEMPLATES.LOGIN.replace(i.PLACEHOLDERS.USERNAME,t).replace(i.PLACEHOLDERS.PASSWORD,e),p=new w(u(E({},i.HEADERS),{"X-Handle-Own-Errors":"true"}));return(O.isNativePlatform()?m(T.post({url:this.endpoint,headers:i.HEADERS,data:r,responseType:"text"})).pipe(h(n=>String(n.data))):this.http.post(this.endpoint,r,{headers:p,responseType:"text"})).pipe(h(n=>this.parseLoginResponse(n)),f(n=>{if(this.updateAuthState(n),n)this.logger.logAuthEvent("Login successful",{username:t});else{this.logger.logAuthEvent("Login failed - invalid credentials",{username:t});let I=a.createLoginError("authentication","Invalid username or password. Please try again.","Authentication failed");this.uiState.addError(I)}}),L(n=>this.handleLoginError(n,t)),A(()=>this.uiState.stopLoading()))}logout(){this.logger.logAuthEvent("Logout initiated"),this.updateAuthState(!1),this.logger.logAuthEvent("Logout completed")}parseLoginResponse(t){try{let e=new DOMParser().parseFromString(t,"text/xml"),r=e.getElementsByTagNameNS(i.NAMESPACE,"LoginResult")[0]||e.getElementsByTagName("LoginResult")[0],p=(r?.textContent||"").trim().toLowerCase()==="true";return this.logger.debug("SOAP response parsed",{hasNode:!!r,nodeContent:r?.textContent,result:p}),p}catch(e){return this.logger.error("Error parsing login response",e),!1}}handleLoginError(t,e){this.logger.error("Login error occurred",{error:t,username:e,status:t.status,statusText:t.statusText}),this.updateAuthState(!1);let r;return t.status===0?(this.logger.logAuthEvent("Login failed - network error",{username:e,errorType:"network"}),r=a.createLoginError("network","Unable to connect to the server. Please check your connection.","Network error")):t.status>=500?(this.logger.logAuthEvent("Login failed - server error",{username:e,errorType:"server",status:t.status}),r=a.createLoginError("server","Server error occurred. Please try again later.",`Server returned ${t.status}`)):(this.logger.logAuthEvent("Login failed - unknown error",{username:e,errorType:"unknown",error:t.message}),r=a.createLoginError("network","Login failed due to a connection error. Please try again.",t.message||"Unknown error")),this.uiState.addError(r),S(!1)}updateAuthState(t){this.setStorage(t),this.loggedIn$.next(t)}setStorage(t){localStorage.setItem(i.STORAGE.LOGIN_KEY,t?"1":"0")}getFromStorage(){return localStorage.getItem(i.STORAGE.LOGIN_KEY)==="1"}};o.\u0275fac=function(e){return new(e||o)(l(R),l(N),l(x))},o.\u0275prov=v({token:o,factory:o.\u0275fac,providedIn:"root"});let g=o;return g})();export{a,K as b};
